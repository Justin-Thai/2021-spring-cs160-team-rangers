{
	"info": {
		"_postman_id": "e78dc2b1-232c-4e11-9f9c-340259fb9c05",
		"name": "Backend API Tests",
		"schema": "https://schema.getpostman.com/json/collection/v2.1.0/collection.json"
	},
	"item": [
		{
			"name": "SignUp/SignIn Requests",
			"item": [
				{
					"name": "Sign up with valid inputs",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Successful POST request: Sign up passed\", function () {\r",
									"    pm.expect(pm.response.code).to.be.oneOf([200]);\r",
									"});\r",
									"\r",
									"pm.test(\"Status code is 200\", function () {\r",
									"    pm.response.to.have.status(200);\r",
									"});\r",
									"\r",
									"var jsonData = pm.response.json();\r",
									"pm.collectionVariables.set(\"token\", jsonData.token);"
								],
								"type": "text/javascript"
							}
						},
						{
							"listen": "prerequest",
							"script": {
								"exec": [
									"pm.collectionVariables.set(\"userNum\", Math.floor((Math.random() * 1000) + 1));"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [],
						"body": {
							"mode": "urlencoded",
							"urlencoded": [
								{
									"key": "email",
									"value": "user{{userNum}}@test.com",
									"type": "text"
								},
								{
									"key": "password",
									"value": "validpassword",
									"type": "text"
								},
								{
									"key": "name",
									"value": "User {{userNum}}",
									"type": "text"
								}
							]
						},
						"url": {
							"raw": "http://localhost:5000/signup",
							"protocol": "http",
							"host": [
								"localhost"
							],
							"port": "5000",
							"path": [
								"signup"
							]
						}
					},
					"response": []
				},
				{
					"name": "Sign up with invalid email",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Unsuccessful POST request: Sign up failed\", function () {\r",
									"    pm.expect(pm.response.code).to.be.oneOf([400]);\r",
									"});\r",
									"\r",
									"pm.test(\"Status code is 400\", function () {\r",
									"    pm.response.to.have.status(400);\r",
									"});\r",
									"\r",
									"pm.test(\"Correct error message displayed\", function () {\r",
									"    var jsonData = pm.response.json();\r",
									"    pm.expect(jsonData.message).to.eql(\"Email is invalid\");\r",
									"});"
								],
								"type": "text/javascript"
							}
						},
						{
							"listen": "prerequest",
							"script": {
								"exec": [
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [],
						"body": {
							"mode": "urlencoded",
							"urlencoded": [
								{
									"key": "email",
									"value": "myemail",
									"type": "text"
								},
								{
									"key": "password",
									"value": "validpassword",
									"type": "text"
								},
								{
									"key": "name",
									"value": "John Doe",
									"type": "text"
								}
							]
						},
						"url": {
							"raw": "http://localhost:5000/signup",
							"protocol": "http",
							"host": [
								"localhost"
							],
							"port": "5000",
							"path": [
								"signup"
							]
						}
					},
					"response": []
				},
				{
					"name": "Sign up with invalid password (less than 8 characters)",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Unsuccessful POST request: Sign up failed\", function () {\r",
									"    pm.expect(pm.response.code).to.be.oneOf([400]);\r",
									"});\r",
									"\r",
									"pm.test(\"Status code is 400\", function () {\r",
									"    pm.response.to.have.status(400);\r",
									"});\r",
									"\r",
									"pm.test(\"Correct error message displayed\", function () {\r",
									"    var jsonData = pm.response.json();\r",
									"    pm.expect(jsonData.message).to.eql(\"Password is invalid, must be between 8 at least characters\");\r",
									"});"
								],
								"type": "text/javascript"
							}
						},
						{
							"listen": "prerequest",
							"script": {
								"exec": [
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [],
						"body": {
							"mode": "urlencoded",
							"urlencoded": [
								{
									"key": "email",
									"value": "johndoe@test.com",
									"type": "text"
								},
								{
									"key": "password",
									"value": "hello",
									"type": "text"
								},
								{
									"key": "name",
									"value": "John Doe",
									"type": "text"
								}
							]
						},
						"url": {
							"raw": "http://localhost:5000/signup",
							"protocol": "http",
							"host": [
								"localhost"
							],
							"port": "5000",
							"path": [
								"signup"
							]
						}
					},
					"response": []
				},
				{
					"name": "Sign up with already registered user",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Unsuccessful POST request: Sign up failed\", function () {\r",
									"    pm.expect(pm.response.code).to.be.oneOf([400]);\r",
									"});\r",
									"\r",
									"pm.test(\"Status code is 400\", function () {\r",
									"    pm.response.to.have.status(400);\r",
									"});\r",
									"\r",
									"pm.test(\"Correct error message displayed\", function () {\r",
									"    var jsonData = pm.response.json();\r",
									"    pm.expect(jsonData.message).to.eql(\"Email is already in use\");\r",
									"});"
								],
								"type": "text/javascript"
							}
						},
						{
							"listen": "prerequest",
							"script": {
								"exec": [
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [],
						"body": {
							"mode": "urlencoded",
							"urlencoded": [
								{
									"key": "email",
									"value": "user{{userNum}}@test.com",
									"type": "text"
								},
								{
									"key": "password",
									"value": "validpassword",
									"type": "text"
								},
								{
									"key": "name",
									"value": "User {{userNum}}",
									"type": "text"
								}
							]
						},
						"url": {
							"raw": "http://localhost:5000/signup",
							"protocol": "http",
							"host": [
								"localhost"
							],
							"port": "5000",
							"path": [
								"signup"
							]
						}
					},
					"response": []
				},
				{
					"name": "Sign up with no inputs",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Unsuccessful POST request: Sign up failed\", function () {\r",
									"    pm.expect(pm.response.code).to.be.oneOf([400]);\r",
									"});\r",
									"\r",
									"pm.test(\"Status code is 400\", function () {\r",
									"    pm.response.to.have.status(400);\r",
									"});\r",
									"\r",
									"pm.test(\"Correct error message displayed\", function () {\r",
									"    var jsonData = pm.response.json();\r",
									"    pm.expect(jsonData.message).to.eql(\"Email or password is not present\");\r",
									"});"
								],
								"type": "text/javascript"
							}
						},
						{
							"listen": "prerequest",
							"script": {
								"exec": [
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [],
						"body": {
							"mode": "urlencoded",
							"urlencoded": [
								{
									"key": "email",
									"value": "",
									"type": "text"
								},
								{
									"key": "password",
									"value": "",
									"type": "text"
								},
								{
									"key": "name",
									"value": "",
									"type": "text"
								}
							]
						},
						"url": {
							"raw": "http://localhost:5000/signup",
							"protocol": "http",
							"host": [
								"localhost"
							],
							"port": "5000",
							"path": [
								"signup"
							]
						}
					},
					"response": []
				},
				{
					"name": "Sign in with invalid email",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Unsuccessful POST request: Sign in failed\", function () {\r",
									"    pm.expect(pm.response.code).to.be.oneOf([400]);\r",
									"});\r",
									"\r",
									"pm.test(\"Status code is 400\", function () {\r",
									"    pm.response.to.have.status(400);\r",
									"});\r",
									"\r",
									"pm.test(\"Correct error message displayed\", function () {\r",
									"    var jsonData = pm.response.json();\r",
									"    pm.expect(jsonData.message).to.eql(\"Email is invalid\");\r",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [],
						"body": {
							"mode": "urlencoded",
							"urlencoded": [
								{
									"key": "email",
									"value": "myemail",
									"type": "text"
								},
								{
									"key": "password",
									"value": "validpassword",
									"type": "text"
								}
							]
						},
						"url": {
							"raw": "http://localhost:5000/signin",
							"protocol": "http",
							"host": [
								"localhost"
							],
							"port": "5000",
							"path": [
								"signin"
							]
						}
					},
					"response": []
				},
				{
					"name": "Sign in with invalid password",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Unsuccessful POST request: Sign in failed\", function () {\r",
									"    pm.expect(pm.response.code).to.be.oneOf([401]);\r",
									"});\r",
									"\r",
									"pm.test(\"Status code is 401\", function () {\r",
									"    pm.response.to.have.status(401);\r",
									"});\r",
									"\r",
									"pm.test(\"Correct error message displayed\", function () {\r",
									"    var jsonData = pm.response.json();\r",
									"    pm.expect(jsonData.message).to.eql(\"Email or password is incorrect\");\r",
									"});\r",
									"\r",
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [],
						"body": {
							"mode": "urlencoded",
							"urlencoded": [
								{
									"key": "email",
									"value": "user{{userNum}}@test.com",
									"type": "text"
								},
								{
									"key": "password",
									"value": "wrongpassword",
									"type": "text"
								}
							]
						},
						"url": {
							"raw": "http://localhost:5000/signin",
							"protocol": "http",
							"host": [
								"localhost"
							],
							"port": "5000",
							"path": [
								"signin"
							]
						}
					},
					"response": []
				},
				{
					"name": "Sign in with no inputs",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Unsuccessful POST request: Sign in failed\", function () {\r",
									"    pm.expect(pm.response.code).to.be.oneOf([400]);\r",
									"});\r",
									"\r",
									"pm.test(\"Status code is 400\", function () {\r",
									"    pm.response.to.have.status(400);\r",
									"});\r",
									"\r",
									"pm.test(\"Correct error message displayed\", function () {\r",
									"    var jsonData = pm.response.json();\r",
									"    pm.expect(jsonData.message).to.eql(\"Email or password is not present\");\r",
									"});\r",
									"\r",
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [],
						"body": {
							"mode": "urlencoded",
							"urlencoded": [
								{
									"key": "email",
									"value": "",
									"type": "text"
								},
								{
									"key": "password",
									"value": "",
									"type": "text"
								}
							]
						},
						"url": {
							"raw": "http://localhost:5000/signin",
							"protocol": "http",
							"host": [
								"localhost"
							],
							"port": "5000",
							"path": [
								"signin"
							]
						}
					},
					"response": []
				},
				{
					"name": "Sign in with unregistered user",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Unsuccessful POST request: Sign in failed\", function () {\r",
									"    pm.expect(pm.response.code).to.be.oneOf([400]);\r",
									"});\r",
									"\r",
									"pm.test(\"Status code is 400\", function () {\r",
									"    pm.response.to.have.status(400);\r",
									"});\r",
									"\r",
									"pm.test(\"Correct error message displayed\", function () {\r",
									"    var jsonData = pm.response.json();\r",
									"    pm.expect(jsonData.message).to.eql(\"User not found\");\r",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [],
						"body": {
							"mode": "urlencoded",
							"urlencoded": [
								{
									"key": "email",
									"value": "johndoe@test.com",
									"type": "text"
								},
								{
									"key": "password",
									"value": "validpassword",
									"type": "text"
								}
							]
						},
						"url": {
							"raw": "http://localhost:5000/signin",
							"protocol": "http",
							"host": [
								"localhost"
							],
							"port": "5000",
							"path": [
								"signin"
							]
						}
					},
					"response": []
				},
				{
					"name": "Sign in with valid inputs",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Successful POST request: Sign in passed\", function () {\r",
									"    pm.expect(pm.response.code).to.be.oneOf([200]);\r",
									"});\r",
									"\r",
									"pm.test(\"Status code is 200\", function () {\r",
									"    pm.response.to.have.status(200);\r",
									"});\r",
									"\r",
									"var jsonData = pm.response.json();\r",
									"pm.collectionVariables.set(\"token\", jsonData.token);"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [],
						"body": {
							"mode": "urlencoded",
							"urlencoded": [
								{
									"key": "email",
									"value": "user{{userNum}}@test.com",
									"type": "text"
								},
								{
									"key": "password",
									"value": "validpassword",
									"type": "text"
								}
							]
						},
						"url": {
							"raw": "http://localhost:5000/signin",
							"protocol": "http",
							"host": [
								"localhost"
							],
							"port": "5000",
							"path": [
								"signin"
							]
						}
					},
					"response": []
				}
			]
		}
	],
	"event": [
		{
			"listen": "prerequest",
			"script": {
				"type": "text/javascript",
				"exec": [
					""
				]
			}
		},
		{
			"listen": "test",
			"script": {
				"type": "text/javascript",
				"exec": [
					""
				]
			}
		}
	],
	"variable": [
		{
			"key": "userId",
			"value": "noUserId"
		},
		{
			"key": "token",
			"value": "noToken"
		},
		{
			"key": "userNum",
			"value": "0"
		}
	]
}